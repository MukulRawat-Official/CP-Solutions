#include <bits/stdc++.h>
#define endl "\n"
#define lli long long int
#define ll long long
#define lld long double
#define ull unsigned long long
#define set_bit __builtin_popcountll // check no of 1 set bit (x) 
#define bp_i  __builtin_popcount // used for integer (x)
#define mp make_pair
#define edge(x,y) cin>>x>>y;adj[x].push_back(y);adj[y].push_back(x);
#define dedge(x,y) cin>>x>>y;adj[x].push_back(y);
#define pq_dec(i) priority_queue<i,vector<i>, greater<i>>
using namespace std;


#ifndef ONLINE_JUDGE
#define debug(x) cerr << #x <<" "; _print(x); cerr << endl;
#else
#define debug(x)
#endif


void _print(ll t) {cerr << t;}
void _print(int t) {cerr << t;}
void _print(string t) {cerr << t;}
void _print(char t) {cerr << t;}
void _print(lld t) {cerr << t;}
void _print(double t) {cerr << t;}
void _print(ull t) {cerr << t;}
void _print(long t) {cerr << t;}


template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(unordered_set <T> v);
template <class T , class V> void _print(unordered_map <T, V> v);
template <class T> void _print(multiset <T> v);
template <class T> void _print(priority_queue <T>v);
template <class T> void _print(priority_queue <T, vector<T>, greater<T>>);


template <class T, class V> void _print(pair <T, V> p) {cerr << "{"; _print(p.first); cerr << ","; _print(p.second); cerr << "}";}
template <class T> void _print(vector <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(unordered_set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(unordered_map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(priority_queue <T> c) {cerr << "[ "; priority_queue <T> v = c; while (v.size()) {cerr << v.top() << " "; v.pop();} cerr << "]";}
template <class T> void _print(priority_queue <T, vector<T>, greater<T>> c) {cerr << "[ "; priority_queue <T, vector<T> , greater<T>> v = c; while (v.size()) {cerr << v.top() << " "; v.pop();} cerr << "]";}

void predefined()
{
  ios_base::sync_with_stdio(false); cin.tie(NULL);
#ifndef ONLINE_JUDGE
  freopen("error.txt", "w", stderr);
  freopen("Input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif
}
/*
  rotate array 4 times now check if there are two zero then we need to change 2 
  if there are 1 zero or 1 one then we ne need to change only one 
  
  now since our answer is repeated for all 4 positons our answer will be total / 4;

*/
vector<string> rotate(vector<string>&arr)
{

   int n = arr.size();
   
   string temp  = "";
   for(int i = 0;i<n;i++) temp+="0";
   
   vector<string>r(n ,temp);
    
   ll  row = n-1;

   for(ll i =0;i<n;i++)
   {
     for(ll j = 0;j<n;j++)
     {r[i][j] = arr[row--][i];}
     
     row = n-1;
   }

   return r;
 }

void solve()
{ 
  int n;
  cin>>n;
  
  vector<string>arr(n);
  vector<vector<ll>>count(n,vector<ll>(n,0));



  for(int i =0;i<n;i++)
  cin>>arr[i];
   


  for(int i =0;i<4;i++)
  {
    arr = rotate(arr);

  
    for(int i =0;i<n;i++)
    {
      for(int  j = 0;j<n;j++)
      count [i][j] += (arr[i][j]&1);
    }
  }

  ll ans =0;

  for(auto& x : count)
  {
    for(auto& k : x)
    {
      if(k == 1 || k == 3) ans++;
      else if(k == 2) ans+=2;
    }
  }

  cout<<ans/4<<endl;
}

int main()
{
  predefined();
  

  lli t;

  cin >> t;


 
  while (t--)
  solve();
}
