#include <bits/stdc++.h>
#define endl "\n"
#define lli long long int
#define ll long long
#define lld long double
#define ull unsigned long long
#define set_bit __builtin_popcountll // check no of 1 set bit (x) 
#define bp_i  __builtin_popcount // used for integer (x)
#define mp make_pair
#define edge(x,y) cin>>x>>y;adj[x].push_back(y);adj[y].push_back(x);
#define dedge(x,y) cin>>x>>y;adj[x].push_back(y);
#define pq_dec(i) priority_queue<i,vector<i>, greater<i>>
#define mod107 1e9+7
using namespace std;


#ifdef LOCAL
#define debug(x) cerr << #x <<" "; _print(x); cerr << endl;
#else
#define debug(x)
#endif


void _print(ll t) {cerr << t;}
void _print(int t) {cerr << t;}
void _print(string t) {cerr << t;}
void _print(char t) {cerr << t;}
void _print(lld t) {cerr << t;}
void _print(double t) {cerr << t;}
void _print(ull t) {cerr << t;}
void _print(long t) {cerr << t;}


template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(unordered_set <T> v);
template <class T , class V> void _print(unordered_map <T, V> v);
template <class T> void _print(multiset <T> v);
template <class T> void _print(priority_queue <T>v);
template <class T> void _print(priority_queue <T, vector<T>, greater<T>>);


template <class T, class V> void _print(pair <T, V> p) {cerr << "{"; _print(p.first); cerr << ","; _print(p.second); cerr << "}";}
template <class T> void _print(vector <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(unordered_set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(unordered_map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(priority_queue <T> c) {cerr << "[ "; priority_queue <T> v = c; while (v.size()) {cerr << v.top() << " "; v.pop();} cerr << "]";}
template <class T> void _print(priority_queue <T, vector<T>, greater<T>> c) {cerr << "[ "; priority_queue <T, vector<T> , greater<T>> v = c; while (v.size()) {cerr << v.top() << " "; v.pop();} cerr << "]";}

void predefined()
{
  ios_base::sync_with_stdio(false); cin.tie(NULL);
#ifdef LOCAL
  freopen("error.txt", "w", stderr);
  freopen("Input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif
}

/*
 best possibility will be adding left bracket first then right bracket this 
 now for second best possibility add
 
 l-1 back for left then  a ')' then '(' followe by all r brackets
 now check if this squence in valid or if this will be not then no other sequence could be valid ..
 
 l = '(';
 r = ')';
*/

void solve()
{ 
  
  string s;
  cin>>s;

  int n = s.size();
  int l = 0 , r = 0 , q;
  for(auto& x : s)
  {
    if(x == '(') l++;
    else if( x == ')') r++;
  }

  
  if(l == n/2 || r == n/2)
  {
    cout<<"YES"<<endl;
    return;
  }
  
  bool ans = true;
  string t = s;

  int a = n/2 - l , b = n/2 - r;

    for(int i =0;i<n;i++)
    {
       if(s[i] != '?') continue;

       if(a>1)
       {s[i] = '('; a--;}
      
       else  if(a == 1)
       {s[i] = ')'; a = -1; b--;}

       else if(a = -1)
       {s[i] = '('; a = 0;}

       else 
       s[i] = ')';
    }
    
    int cnt = 0;
    for(int i = 0;i<n;i++)
    {
      if(s[i] == '(') cnt++;
      else cnt--;

      if(cnt<0) { cout<<"YES"<<endl; return;}
    }

    cout<<"NO"<<endl;
 

}

 
int main()
{
  predefined();


  lli t;

  cin >> t;



 
  while (t--)
  solve();


}
