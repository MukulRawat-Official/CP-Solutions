#include <iostream>
#include <bits/stdc++.h>
#define lli long long int
#define ll long long
#define lld long double
#define ull unsigned long long
#define sl long
#define set_bit __builtin_popcountll // check no of 1 set bit (x) 
#define bp_i  __builtin_popcount // used for integer (x)
#define mp  make_pair


using namespace std;


#ifndef ONLINE_JUDGE
#define debug(x) cerr << #x <<" "; _print(x); cerr << endl;
#else
#define debug(x)
#endif


void _print(ll t) {cerr << t;}
void _print(int t) {cerr << t;}
void _print(string t) {cerr << t;}
void _print(char t) {cerr << t;}
void _print(lld t) {cerr << t;}
void _print(double t) {cerr << t;}
void _print(ull t) {cerr << t;}
void _print(long t) {cerr << t;}

template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(unordered_set <T> v);
template <class T , class V> void _print(unordered_map <T, V> v);
template <class T> void _print(multiset <T> v);


template <class T, class V> void _print(pair <T, V> p) {cerr << "{"; _print(p.first); cerr << ","; _print(p.second); cerr << "}";}
template <class T> void _print(vector <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(unordered_set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(unordered_map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}


void predefined()
{
  ios_base::sync_with_stdio(false); cin.tie(NULL);
#ifndef ONLINE_JUDGE
  freopen("error.txt", "w", stderr);
  freopen("Input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif
}
/*

check for first occrencce of zero because if 

that guy is saying truth then previous guy has taken painting else robber wiil be that first zero guy...
all the guy behind zero guy will be saying truth and they can't be 1 ..


now check for last occurence of 1 guy ;
as for last occurence of one if he says truth then guy next to it can be suspect 
if he say false statement he will be suspect but guy before them will surely saying truth  

now our range will be first zero and last 1 position guy 


for base case like 
1.> no one  and no zero all will be suspect
2.> no one -> all element before zero will be suspect including first zer0
3.> no zero -> all element infront one including last one will be suspect 

*/



void solve()
{
  string s;

  getline(cin, s);

  int n = s.length();

  int z = 0 , o = 0;





  for (int i = 0; i < n; i++)
  {
    if (s[i] == '0')
    {
      z = i + 1;
      break;
    }
  }

  for (int i = 0; i < n; i++)
  {
    if (s[i] == '1')
      o = i + 1;
  }

  if (z == 0 && o == 0)
    cout << n << endl;



  else if (o == 0)
    cout << z << endl;

  else if (z == 0)
    cout << n - o + 1 << endl;

  else
    cout << abs(z  - o) + 1 << endl;
}

int main()
{
  predefined();
  lli t;
  cin >> t;
  cin.ignore();
  while (t--)
    solve();
}
