#include <iostream>
#include <bits/stdc++.h>
#define lli long long int
#define ll long long
#define lld long double
#define ull unsigned long long
#define sl long
#define set_bit __builtin_popcountll // check no of 1 set bit (x) 
#define bp_i  __builtin_popcount // used for integer (x)


using namespace std;


#ifndef ONLINE_JUDGE
#define debug(x) cerr << #x <<" "; _print(x); cerr << endl;
#else
#define debug(x)
#endif

void _print(ll t) {cerr << t;}
void _print(int t) {cerr << t;}
void _print(string t) {cerr << t;}
void _print(char t) {cerr << t;}
void _print(lld t) {cerr << t;}
void _print(double t) {cerr << t;}
void _print(ull t) {cerr << t;}
void _print(long t) {cerr << t;}

template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(unordered_set <T> v);
template <class T , class V> void _print(unordered_map <T, V> v);
template <class T> void _print(multiset <T> v);


template <class T, class V> void _print(pair <T, V> p) {cerr << "{"; _print(p.first); cerr << ","; _print(p.second); cerr << "}";}
template <class T> void _print(vector <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(unordered_set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(unordered_map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}


void predefined()
{
  ios_base::sync_with_stdio(false); cin.tie(NULL);
#ifndef ONLINE_JUDGE
  freopen("error.txt", "w", stderr);
  freopen("Input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif
}
void solve() {

  int n , q;

  cin >> n >> q;

  map<int, ll>m;
  bool all = false;
  ll sum = 0;
  ll all_element = -1;

  ll temp;
  for (int i = 1; i <= n; i++)
  {
    cin >> temp;
    m[i] = temp;

    sum += temp;
  }

  while (q--)
  {
    ll prob;
    cin >> prob;

    if (prob == 2)
    {
      cin >> prob;
      all = true;

      sum = n * prob;
      cout << sum << endl;

      all_element = prob;

      m.clear();
    }

    else
    {
      int pos;
      cin >> pos >> prob;

      if (all)
      {
        all = false;

        sum -= all_element;
        sum += prob;
        m[pos] = prob;
      }

      else
      {
        if (m.find(pos) != m.end())
          sum = sum - m[pos] + prob;

        else
          sum = sum - all_element + prob;

        m[pos] = prob;
      }

      cout << sum << endl;
    }
  }


}

int main()
{
  predefined();


  // lli t;

  // cin >> t;

  // cin.ignore();


  // while (t--)
  solve();

}
