#include <bits/stdc++.h>
#define endl "\n"
#define lli long long int
#define ll long long
#define lld long double
#define ull unsigned long long
#define set_bit __builtin_popcountll // check no of 1 set bit (x) 
#define bp_i  __builtin_popcount // used for integer (x)
#define mp make_pair
#define edge(x,y) cin>>x>>y;adj[x].push_back(y);adj[y].push_back(x);
#define dedge(x,y) cin>>x>>y;adj[x].push_back(y);
#define pq_dec(i) priority_queue<i,vector<i>, greater<i>>
using namespace std;


#ifndef ONLINE_JUDGE
#define debug(x) cerr << #x <<" "; _print(x); cerr << endl;
#else
#define debug(x)
#endif


void _print(ll t) {cerr << t;}
void _print(int t) {cerr << t;}
void _print(string t) {cerr << t;}
void _print(char t) {cerr << t;}
void _print(lld t) {cerr << t;}
void _print(double t) {cerr << t;}
void _print(ull t) {cerr << t;}
void _print(long t) {cerr << t;}


template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(unordered_set <T> v);
template <class T , class V> void _print(unordered_map <T, V> v);
template <class T> void _print(multiset <T> v);
template <class T> void _print(priority_queue <T>v);
template <class T> void _print(priority_queue <T, vector<T>, greater<T>>);


template <class T, class V> void _print(pair <T, V> p) {cerr << "{"; _print(p.first); cerr << ","; _print(p.second); cerr << "}";}
template <class T> void _print(vector <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(unordered_set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(unordered_map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(priority_queue <T> c) {cerr << "[ "; priority_queue <T> v = c; while (v.size()) {cerr << v.top() << " "; v.pop();} cerr << "]";}
template <class T> void _print(priority_queue <T, vector<T>, greater<T>> c) {cerr << "[ "; priority_queue <T, vector<T> , greater<T>> v = c; while (v.size()) {cerr << v.top() << " "; v.pop();} cerr << "]";}

void predefined()
{
  ios_base::sync_with_stdio(false); cin.tie(NULL);
#ifndef ONLINE_JUDGE
  freopen("error.txt", "w", stderr);
  freopen("Input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif
}

ll max(ll a , ll b)
{
  if (a > b)
    return a;
  return b;
}
/*
  we can swap only when we get ab or bc 
  
  now if string match there is no problem but what it it don't
  what we can do in string where we want to swap 
  1.> if we get 'c' we can't do nothing then
  2.> if we get 'a' we can get 'b' only so if in our target string its 'c' then game over
  3.> similary if we get 'b' in our current string and we need 'a' in target string we're gone

 now what to do 
 
 1.> we traverse through string if we get 'a' and we want 'b'
     we traverse through current string if we till we're getting 'a'
     now if at end we get 'c' game over else swap 'a' and 'b' and continue from mismatch index + 1
  
     similary for 'b' ... we traverse till we're getting 'b' if at end we get 'c' we swap it else game over 

*/

void solve()
{
  int n, q;
  string a , b;
  cin >> q;


  while (q--)
  {
    debug(q);
    cin >> n;
    cin >> a >> b;

    bool ans = true ;

    int i  = 0 , j = 0;

    while (i < n && j < n && ans)
    {
      if (a[i] == b[j])
      {i++; j++; continue;}

      else if ((a[i] == 'a' && b[j] == 'c') || (a[i] == 'b' && b[j] == 'a') || a[i] == 'c')
        ans = false;

      else
      {
        int idx = i++;;

        while (i < n && a[i] == a[idx])
        {i++;}

        if (i == n || a[i] != b[j])
          ans = false;

        swap(a[idx] , a[i]);
        i = idx + 1;
        j++;
      }


    }
    if (ans)
      cout << "YES" << endl;

    else
      cout << "NO" << endl;

  }




}







int main()
{
  predefined();
  // sol();

  // lli t;

  // cin >> t;


  // while (t--)
  solve();
}
