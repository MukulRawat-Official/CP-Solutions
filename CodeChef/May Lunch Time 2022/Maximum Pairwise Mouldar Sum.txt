#include <iostream>
#include <bits/stdc++.h>
#define lli long long int
#define ll long long
#define lld long double
#define ull unsigned long long
#define sl long
#define set_bit __builtin_popcountll // check no of 1 set bit (x) 
#define bp_i  __builtin_popcount // used for integer (x)


using namespace std;


#ifndef ONLINE_JUDGE
#define debug(x) cerr << #x <<" "; _print(x); cerr << endl;
#else
#define debug(x)
#endif

void _print(ll t) {cerr << t;}
void _print(int t) {cerr << t;}
void _print(string t) {cerr << t;}
void _print(char t) {cerr << t;}
void _print(lld t) {cerr << t;}
void _print(double t) {cerr << t;}
void _print(ull t) {cerr << t;}
void _print(long t) {cerr << t;}

template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(unordered_set <T> v);
template <class T , class V> void _print(unordered_map <T, V> v);
template <class T> void _print(multiset <T> v);


template <class T, class V> void _print(pair <T, V> p) {cerr << "{"; _print(p.first); cerr << ","; _print(p.second); cerr << "}";}
template <class T> void _print(vector <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(unordered_set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(unordered_map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}


void predefined()
{
  ios_base::sync_with_stdio(false); cin.tie(NULL);
#ifndef ONLINE_JUDGE
  freopen("error.txt", "w", stderr);
  freopen("Input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif
}

long max(long& a, long& b)
{
  if (a >= b)
    return a;

  return b;
}

/*
max value can only be formed by   largest , second largest( not equal to largest) , least element
so we'll find answer by these values only

*/

void solve() {

  int n , m;
  cin >> n >> m;
  vector<long>arr(n);

  for (int i = 0; i < n; i++)
    cin >> arr[i];

  sort(arr.begin(), arr.end());
  long ans = 0;



  long h = arr[n - 1] , s = -1 , f = arr[0];

  int idx = n - 1;

  while (idx > 0 && arr[idx] == arr[n - 1])
    idx--;

  if (idx != -1)
    s = arr[idx];

  arr.clear();

  arr.push_back(f);
  arr.push_back(s);
  arr.push_back(h);
  for (int i = 0; i < 3; i++)
  {
    for (int j = i; j < 3; j++)
    {
      long x = arr[i] + arr[j];
      long mod = abs(arr[i] - arr[j]) % m;

      if (arr[j] > arr[i])
        mod = m - mod;

      x += mod;

      ans = max(ans, x);

    }
  }

  cout << ans << endl;





}

int main()
{
  predefined();


  lli t;

  cin >> t;




  while (t--)
    solve();

}
