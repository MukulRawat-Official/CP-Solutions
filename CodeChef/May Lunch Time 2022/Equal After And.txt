#include <iostream>
#include <bits/stdc++.h>
#define lli long long int
#define ll long long
#define lld long double
#define ull unsigned long long
#define sl long
#define set_bit __builtin_popcountll // check no of 1 set bit (x) 
#define bp_i  __builtin_popcount // used for integer (x)


using namespace std;


#ifndef ONLINE_JUDGE
#define debug(x) cerr << #x <<" "; _print(x); cerr << endl;
#else
#define debug(x)
#endif

void _print(ll t) {cerr << t;}
void _print(int t) {cerr << t;}
void _print(string t) {cerr << t;}
void _print(char t) {cerr << t;}
void _print(lld t) {cerr << t;}
void _print(double t) {cerr << t;}
void _print(ull t) {cerr << t;}
void _print(long t) {cerr << t;}

template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(unordered_set <T> v);
template <class T , class V> void _print(unordered_map <T, V> v);
template <class T> void _print(multiset <T> v);


template <class T, class V> void _print(pair <T, V> p) {cerr << "{"; _print(p.first); cerr << ","; _print(p.second); cerr << "}";}
template <class T> void _print(vector <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(unordered_set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(unordered_map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}


void predefined()
{
  ios_base::sync_with_stdio(false); cin.tie(NULL);
#ifndef ONLINE_JUDGE
  freopen("error.txt", "w", stderr);
  freopen("Input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif
}


void check(vector<ll>&b , ll num)
{
  int idx = 0;

  while (num > 0)
  {
    if (num & 1)
      b[idx]++;

    idx++;
    num = num >> 1;
  }
}

/*
   we'll check no that can be formed and bitwise and of all nos
   now we'll form groups where each group represnt bitwise eqaul to bitwise and of all no 
   ans will be n - no of groups
*/

void solve() {

  int n;
  cin >> n;

  vector<ll>arr(n);
  vector<ll>bit(32, 0);

  int  c = 0;

  for (int i = 0; i < n; i++)
  {
    cin >> arr[i];
    check(bit, arr[i]);

    if (arr[i] == 0)
      c++;

  }


  ll num = 0;

  if (c == 0)
  {
    ll x = 0;
    ll fact = 1;

    for ( int i = 0; i < 32; i++)
    {
      if (bit[i] == n)
        x += fact;

      fact *= 2;
    }

    num = x;
  }


  ll op = 0;


  ll x = arr[n - 1];
  for (int i = n - 2; i >= 0; i--)
  {
    if (x == num)
    {
      op++;
      x = arr[i];
    }
    else
      x &= arr[i];
  }

  if (x == num)
    op++;



  debug(num);


  cout << n - op << endl;

}

int main()
{
  predefined();


  lli t;

  cin >> t;




  while (t--)
    solve();

}
