#include <bits/stdc++.h>
#define endl "\n"
#define lli long long int
#define ll long long
#define lld long double
#define ull unsigned long long
#define set_bit __builtin_popcountll // check no of 1 set bit (x) 
#define bp_i  __builtin_popcount // used for integer (x)
#define mp make_pair
#define pq(i) priority_queue<i>
#define pq_dec(i) priority_queue<i,vector<i>, greater<i>>
using namespace std;


#ifndef ONLINE_JUDGE
#define debug(x) cerr << #x <<" "; _print(x); cerr << endl;
#else
#define debug(x)
#endif


void _print(ll t) {cerr << t;}
void _print(int t) {cerr << t;}
void _print(string t) {cerr << t;}
void _print(char t) {cerr << t;}
void _print(lld t) {cerr << t;}
void _print(double t) {cerr << t;}
void _print(ull t) {cerr << t;}
void _print(long t) {cerr << t;}


template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(unordered_set <T> v);
template <class T , class V> void _print(unordered_map <T, V> v);
template <class T> void _print(multiset <T> v);
template <class T> void _print(priority_queue <T>v);
template <class T> void _print(priority_queue <T, vector<T>, greater<T>>);


template <class T, class V> void _print(pair <T, V> p) {cerr << "{"; _print(p.first); cerr << ","; _print(p.second); cerr << "}";}
template <class T> void _print(vector <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(unordered_set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(unordered_map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(priority_queue <T> c) {cerr << "[ "; priority_queue <T> v = c; while (v.size()) {cerr << v.top() << " "; v.pop();} cerr << "]";}
template <class T> void _print(priority_queue <T, vector<T>, greater<T>> c) {cerr << "[ "; priority_queue <T, vector<T> , greater<T>> v = c; while (v.size()) {cerr << v.top() << " "; v.pop();} cerr << "]";}

void predefined()
{
  ios_base::sync_with_stdio(false); cin.tie(NULL);
#ifndef ONLINE_JUDGE
  freopen("error.txt", "w", stderr);
  freopen("Input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif
}


/*

observations n = 2^17 and max value possible  = 3 * 10^15;
so we can start array from 2^17 + 1;

as similar bits will get cancelled 

but here lies one problem

1 , 2 , 3 .... 2^17-1 ,2^17
2^17 + 1 , 2^17 + 2 , .......  2^17 + 2^17 - 1 , 2^17 + 2^17( = 2^18)
2^18 will give higer bit so cancellaation will not work here at last level ...

so we can use


2 , 3  ... 2^17 , 2^17 + 1

2^17 + 1 ........ 2^18 , 2^18 + 1

so it will get correct ans

we learn one more thing here
->  when i == even  and  next indx == i+1;
then there suffix xor will always be equal to one..



*/
void solve()
{
  int n;
  cin >> n;

  vector<long>a(n), b(n);

  int p = (long)pow(2, 17) + 2;
  for (int i = 0; i < n; i++)
  {
    a[i] = i + 2;
    b[i] = i + p;
  }


  for (int i = 0; i < n; i++)
    cout << a[i] << " ";

  cout << endl;

  for (int i = 0; i < n; i++)
    cout << b[i] << " ";


  cout << endl;
}

int main()
{
  predefined();


  lli t;

  cin >> t;

  while (t--)
    solve();
}
