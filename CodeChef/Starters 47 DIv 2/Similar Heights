#include <bits/stdc++.h>
#define endl "\n"
#define lli long long int
#define ll long long
#define lld long double
#define ull unsigned long long
#define set_bit __builtin_popcountll // check no of 1 set bit (x) 
#define bp_i  __builtin_popcount // used for integer (x)
#define mp make_pair
#define edge(x,y) cin>>x>>y;adj[x].push_back(y);adj[y].push_back(x);
#define dedge(x,y) cin>>x>>y;adj[x].push_back(y);
#define pq_dec(i) priority_queue<i,vector<i>, greater<i>>
using namespace std;


#ifndef ONLINE_JUDGE
#define debug(x) cerr << #x <<" "; _print(x); cerr << endl;
#else
#define debug(x)
#endif


void _print(ll t) {cerr << t;}
void _print(int t) {cerr << t;}
void _print(string t) {cerr << t;}
void _print(char t) {cerr << t;}
void _print(lld t) {cerr << t;}
void _print(double t) {cerr << t;}
void _print(ull t) {cerr << t;}
void _print(long t) {cerr << t;}


template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(unordered_set <T> v);
template <class T , class V> void _print(unordered_map <T, V> v);
template <class T> void _print(multiset <T> v);
template <class T> void _print(priority_queue <T>v);
template <class T> void _print(priority_queue <T, vector<T>, greater<T>>);


template <class T, class V> void _print(pair <T, V> p) {cerr << "{"; _print(p.first); cerr << ","; _print(p.second); cerr << "}";}
template <class T> void _print(vector <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(unordered_set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(unordered_map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(priority_queue <T> c) {cerr << "[ "; priority_queue <T> v = c; while (v.size()) {cerr << v.top() << " "; v.pop();} cerr << "]";}
template <class T> void _print(priority_queue <T, vector<T>, greater<T>> c) {cerr << "[ "; priority_queue <T, vector<T> , greater<T>> v = c; while (v.size()) {cerr << v.top() << " "; v.pop();} cerr << "]";}

void predefined()
{
  ios_base::sync_with_stdio(false); cin.tie(NULL);
#ifndef ONLINE_JUDGE
  freopen("error.txt", "w", stderr);
  freopen("Input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif
}

ll minm(ll a , ll b)
{
   if(a<b) return a;
   return b;
}

ll max(ll a , ll b)
{
   if(a>b) return a; return b;
}
/*

 clac total no of players with one number
 
 if one pleryers  > 1 -> ans =  ans / 2 + (ans % 2)
 as we can club them
 
 
 if only one player exists
 
 
  1 1 2 2 4
  in this case we need to at least two as lifiting one can make another sad
  
  1 1 4 2 2
  ans will be one only
  

*/
void solve()
{ 
   ll n , temp ;
   cin>>n;
   
   map<ll,int>m;
   vector<ll>arr(n);
   for(int i =0;i<n;i++)
   {
      cin>>arr[i];
      m[arr[i]]++;
   }

   ll o = 0;

   for(auto& x : m)
   {if(x.second == 1) o ++;}
     

   ll ans = 0;

   
   if(o == 1)
   {
     ll p = 0 , n = 0 , val = -1;
     for(auto& x : m)
     {
       if(x.second == 1) {val = x.first;
       break;}
     }
     
     sort(arr.begin(),arr.end());
     debug(val);
     for(auto& x : arr)
     {
       if(x<val) { p = max(m[x] , p);}
       if(x>val) { n = max(m[x] , n);}
     }

     if(n || p>2) ans = 1;
     else ans = 2;
    }

   else ans = o/2 + (o%2);

   cout<<ans<<endl;


}

int main()
{
  predefined();
  

  lli t;

  cin >> t;


 
  while (t--)
  solve();
}
